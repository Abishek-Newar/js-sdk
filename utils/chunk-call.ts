/**
 * JavaScript and Node.js SDK for OpenFGA
 *
 * API version: 0.1
 * Website: https://openfga.dev
 * Documentation: https://openfga.dev/docs
 * Support: https://discord.gg/8naAwJfWN6
 * License: [Apache-2.0](https://github.com/openfga/js-sdk/blob/main/LICENSE)
 *
 * NOTE: This file was auto generated by OpenAPI Generator (https://openapi-generator.tech). DO NOT EDIT.
 */

import chunkArray from "./chunk-array";

export async function chunkParallelCall<T = any, W = any>(
  fnToCall: (chunk: T[]) => Promise<W>,
  dataArray: T[],
  maxPerChunk: number,
): Promise<Awaited<W>[]> {
  const chunkedSet = chunkArray<T>(dataArray, maxPerChunk);
  return Promise.all(chunkedSet.map((chunk) => fnToCall(chunk)));
}

export async function chunkSequentialCall<T = any, W = any>(
  fnToCall: (chunk: T[]) => Promise<W>,
  dataArray: T[],
  maxPerChunk: number,
): Promise<Awaited<W>[]> {
  const chunkedSet = chunkArray<T>(dataArray, maxPerChunk);
  const results = [];
  for (const chunk of chunkedSet) {
    results.push(await fnToCall(chunk));
  }
  return results;
}
